---
// Elegant minimal header inspired by editorial design
import { getCurrentSeason } from '../utils/season';

const currentDate = new Date();
const monthYear = currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
const season = getCurrentSeason();
---

<!-- Fixed Navigation -->
<div class="nav-left">
  <a href="/" class="menu-trigger">Home</a>
  <a href="/zero-to-ship">Zero to Ship</a>
  <a href="/tags">Tags</a>
</div>
<div class="nav-right">
  <a href="/about">About</a>
  <button class="nav-button" data-newsletter-trigger>Subscribe</button>
</div>

<!-- Mobile Menu Overlay -->
<div class="mobile-menu-overlay">
  <nav class="mobile-menu">
    <a href="/" class="mobile-menu-item">Home</a>
    <a href="/zero-to-ship" class="mobile-menu-item">Zero to Ship</a>
    <a href="/tags" class="mobile-menu-item">Tags</a>
    <a href="/about" class="mobile-menu-item">About</a>
  </nav>
</div>

<!-- Static Header -->
<header class="site-header">
  <a href="/" class="logo-box">
    <div class="logo-line">VIBE CODE</div>
    <div class="logo-line">MOONLIGHTER</div>
  </a>
</header>

<style>
  /* Fixed Navigation */
  .nav-left {
    position: fixed;
    top: var(--space-8);
    left: var(--space-8);
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    align-items: flex-start;
  }

  .nav-right {
    position: fixed;
    top: var(--space-8);
    right: var(--space-8);
    z-index: 100;
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    align-items: flex-end;
  }

  .nav-left a,
  .nav-right a,
  .nav-button {
    font-family: var(--font-sans-geometric);
    font-size: 0.6rem;
    font-weight: var(--font-weight-bold);
    color: var(--color-text-primary);
    text-transform: uppercase;
    letter-spacing: 0.3em;
    line-height: var(--line-height-normal);
    transition: var(--transition-normal);
  }

  .nav-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    text-decoration: none;
  }

  .nav-left a:hover,
  .nav-right a:hover,
  .nav-button:hover {
    color: var(--color-accent);
    text-decoration: none;
  }

  /* Special sparkle for Zero to Ship */
  .nav-left a[href="/zero-to-ship"] {
    animation: sparkle 4s ease-in-out infinite;
  }

  .nav-left a[href="/zero-to-ship"]:hover {
    animation: none;
    color: var(--color-accent);
  }

  @keyframes sparkle {
    0%, 100% { 
      color: var(--color-text-primary);
    }
    50% { 
      color: var(--color-accent);
    }
  }

  /* Static Header */
  .site-header {
    position: fixed;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    z-index: 100;
  }

  .logo-box {
    display: block;
    position: relative;
    background: var(--color-text-primary);
    color: var(--color-neutral-0);
    padding: var(--space-5) var(--space-4);
    text-decoration: none;
    text-align: center;
    overflow: hidden;
  }

  .logo-box::before {
    content: '';
    position: absolute;
    top: -100%;
    left: -100%;
    right: 100%;
    bottom: 100%;
    background: linear-gradient(
      135deg,
      var(--color-accent) 0%,
      var(--color-accent) 50%,
      transparent 50%,
      transparent 100%
    );
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 1;
  }

  .logo-box:hover::before {
    top: -50%;
    left: -50%;
    right: -50%;
    bottom: -50%;
  }

  .logo-line {
    font-family: var(--font-sans-geometric);
    font-size: 0.5rem;
    font-weight: 900;
    letter-spacing: 0.8em;
    line-height: 1.8;
    white-space: nowrap;
    text-align: center;
    padding-left: 0.8em; /* Compensate for letter-spacing on the right */
    position: relative;
    z-index: 2;
  }

  .logo-box:hover {
    transform: translateY(-1px);
  }

  /* Mobile */
  @media (max-width: 768px) {
    .nav-left {
      left: var(--space-4);
      top: var(--space-4);
    }

    .nav-right {
      right: var(--space-4);
      top: var(--space-4);
    }

    .nav-left,
    .nav-right {
      gap: var(--space-2);
    }

    .nav-left a,
    .nav-right a {
      font-size: 0.6rem;
    }
  }

  /* ===== MOBILE TOUCH TARGET IMPROVEMENTS ===== */
  /* Ensuring 44px minimum touch targets for accessibility */
  @media (max-width: 767px) {
    .nav-left a,
    .nav-right a,
    .nav-button {
      /* Increase font size for better readability */
      font-size: 0.7rem !important;
      /* Add padding for larger touch area */
      padding: var(--space-2);
      /* Ensure minimum touch target height */
      min-height: 44px;
      display: flex;
      align-items: center;
      /* Negative margin to keep visual spacing tight */
      margin: calc(var(--space-2) * -0.5) 0;
    }

    /* Adjust gap to account for padding */
    .nav-left,
    .nav-right {
      gap: 0;
    }
  }

  /* Small phones need even more consideration */
  @media (max-width: 480px) {
    .nav-left,
    .nav-right {
      top: var(--space-3);
    }
    
    .nav-left {
      left: calc(var(--page-padding) + var(--space-3)); /* Match main content gutter better */
    }
    
    .nav-right {
      right: calc(var(--page-padding) + var(--space-3)); /* Match main content gutter better */
    }
    
    /* Hide all but first link on mobile, rename to "Menu" */
    .nav-left a:not(:first-child) {
      display: none;
    }
    
    .nav-right a {
      display: none;
    }
    
    /* Make nav items slightly bigger than logo text */
    .nav-left a,
    .nav-button {
      font-size: 0.57rem !important; /* Just a bit smaller */
    }
  }

  /* Mobile Menu Overlay */
  .mobile-menu-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: var(--color-border); /* Off-white gray background */
    border-bottom: 1px solid var(--color-border);
    z-index: 99;
    padding-top: 60px; /* Space for menu/subscribe buttons */
    transform: translateY(-100%);
    transition: transform 280ms ease; /* Slightly slower animation */
  }

  .mobile-menu-overlay.active {
    transform: translateY(0);
  }

  .mobile-menu {
    padding: var(--space-4) var(--page-padding) var(--space-6);
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }

  .mobile-menu-item {
    font-family: var(--font-sans-geometric);
    font-size: 0.57rem; /* Match nav button size */
    font-weight: var(--font-weight-bold); /* Match nav bold weight */
    text-transform: uppercase;
    letter-spacing: 0.3em; /* Match nav letter spacing */
    color: var(--color-text-primary);
    text-decoration: none;
    padding: var(--space-3) 0;
    margin-left: 20px; /* Move items to the right to align with Close */
    transition: color var(--transition-normal);
  }

  .mobile-menu-item:hover {
    color: var(--color-accent);
  }

  /* Show overlay only on mobile */
  @media (max-width: 480px) {
    .mobile-menu-overlay {
      display: block;
    }
    
    .menu-trigger {
      cursor: pointer;
    }

    /* Move subscribe button more to the right on mobile */
    .nav-right {
      right: var(--space-4); /* Balanced position */
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const newsletterTrigger = document.querySelector('[data-newsletter-trigger]');
    newsletterTrigger?.addEventListener('click', () => {
      if (typeof (window as any).openNewsletterModal === 'function') {
        (window as any).openNewsletterModal();
      }
    });
    
    // Change "Home" to "Menu" on mobile and handle menu toggle
    const menuTrigger = document.querySelector('.menu-trigger');
    const mobileMenuOverlay = document.querySelector('.mobile-menu-overlay');
    
    function updateNavText() {
      if (menuTrigger && window.innerWidth <= 480) {
        menuTrigger.textContent = 'Menu';
      } else if (menuTrigger) {
        menuTrigger.textContent = 'Home';
      }
    }
    
    updateNavText();
    window.addEventListener('resize', updateNavText);
    
    // Handle menu toggle on mobile
    if (menuTrigger && mobileMenuOverlay) {
      menuTrigger.addEventListener('click', (e) => {
        if (window.innerWidth <= 480) {
          e.preventDefault();
          e.stopPropagation(); // Prevent event bubbling
          mobileMenuOverlay.classList.toggle('active');
          
          // Update menu text based on state
          if (mobileMenuOverlay.classList.contains('active')) {
            menuTrigger.textContent = 'Close';
          } else {
            menuTrigger.textContent = 'Menu';
          }
        }
      });
      
      // Close menu when clicking a link
      const menuItems = document.querySelectorAll('.mobile-menu-item');
      menuItems.forEach(item => {
        item.addEventListener('click', () => {
          mobileMenuOverlay.classList.remove('active');
          menuTrigger.textContent = 'Menu';
        });
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (window.innerWidth <= 480 && mobileMenuOverlay.classList.contains('active')) {
          // Check if click was outside the menu overlay and not on the trigger
          if (!mobileMenuOverlay.contains(e.target) && e.target !== menuTrigger) {
            mobileMenuOverlay.classList.remove('active');
            menuTrigger.textContent = 'Menu';
          }
        }
      });
      
      // Prevent clicks inside menu from closing it
      mobileMenuOverlay.addEventListener('click', (e) => {
        e.stopPropagation();
      });
      
      // Reset on resize
      window.addEventListener('resize', () => {
        if (window.innerWidth > 480) {
          mobileMenuOverlay.classList.remove('active');
        }
      });
    }
  });
</script>