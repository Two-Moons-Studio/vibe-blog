---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts
    .filter(post => !post.data.draft)
    .map((post) => ({
      params: { slug: post.slug },
      props: { post },
    }));
}

type Props = {
  post: CollectionEntry<'posts'>;
};

const { post } = Astro.props;
const { Content } = await post.render();

const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<Layout title={post.data.title} description={post.data.excerpt}>
  <article class="post">
    <div class="container">
      <header class="post-header">
        <h1>{post.data.title}</h1>
        <div class="post-meta">
          <time datetime={post.data.date.toISOString()}>
            {formatDate(post.data.date)}
          </time>
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="post-tags">
              {post.data.tags.map(tag => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )}
        </div>
      </header>

      <div class="post-content">
        <Content />
      </div>

      <footer class="post-footer">
        <nav class="post-nav">
          <a href="/archive" class="back-link">‚Üê All Posts</a>
          <a href="/subscribe" class="subscribe-cta">Subscribe for Updates</a>
        </nav>
      </footer>
    </div>
  </article>
</Layout>

<style>
  .post {
    padding: var(--space-8) 0;
  }

  .post-header {
    text-align: center;
    margin-bottom: var(--space-8);
    padding-bottom: var(--space-6);
    border-bottom: 1px solid var(--color-neutral-20);
  }

  .post-header h1 {
    margin-bottom: var(--space-4);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .post-meta {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-4);
    flex-wrap: wrap;
  }

  .post-meta time {
    font-family: var(--font-sans);
    font-size: var(--font-size-small);
    color: var(--color-text-secondary);
  }

  .post-tags {
    display: flex;
    gap: var(--space-2);
    flex-wrap: wrap;
  }

  .tag {
    font-family: var(--font-sans);
    font-size: var(--font-size-small);
    background: var(--color-neutral-20);
    color: var(--color-text-secondary);
    padding: var(--space-1) var(--space-2);
    border-radius: 4px;
  }

  .post-content {
    margin-bottom: var(--space-10);
  }

  .post-footer {
    padding-top: var(--space-6);
    border-top: 1px solid var(--color-neutral-20);
  }

  .post-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .back-link {
    font-family: var(--font-sans);
    color: var(--color-text-secondary);
  }

  .subscribe-cta {
    background: var(--color-accent-primary);
    color: white;
    padding: var(--space-2) var(--space-4);
    border-radius: 4px;
    font-family: var(--font-sans);
    font-weight: var(--font-weight-medium);
  }

  .subscribe-cta:hover {
    opacity: 0.9;
    text-decoration: none;
  }

  /* Mobile */
  @media (max-width: 768px) {
    .post-meta {
      flex-direction: column;
      gap: var(--space-2);
    }
    
    .post-nav {
      flex-direction: column;
      gap: var(--space-4);
      text-align: center;
    }
  }
</style>