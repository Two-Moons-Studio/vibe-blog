---
import Layout from '../../layouts/Layout.astro';
import PageHeader from '../../components/PageHeader.astro';
import Tag from '../../components/Tag.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts
    .filter(post => !post.data.draft)
    .map((post) => ({
      params: { slug: post.slug },
      props: { post },
    }));
}

type Props = {
  post: CollectionEntry<'posts'>;
};

const { post } = Astro.props;
const { Content } = await post.render();

const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Get related posts based on shared tags
const allPosts = await getCollection('posts');
const publishedPosts = allPosts.filter(p => !p.data.draft && p.slug !== post.slug);

const relatedPosts = publishedPosts
  .map(p => {
    const sharedTags = post.data.tags?.filter(tag => p.data.tags?.includes(tag)) || [];
    return { post: p, tagOverlap: sharedTags.length };
  })
  .filter(item => item.tagOverlap > 0)
  .sort((a, b) => {
    if (a.tagOverlap !== b.tagOverlap) return b.tagOverlap - a.tagOverlap;
    return b.post.data.date.getTime() - a.post.data.date.getTime();
  })
  .slice(0, 3)
  .map(item => item.post);

// Fallback to recent posts if no tag overlap
const archivePosts = relatedPosts.length > 0 
  ? relatedPosts 
  : publishedPosts
      .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
      .slice(0, 3);
---

<Layout title={post.data.title} description={post.data.excerpt}>
  <div class="container">
    <PageHeader 
      title={post.data.title}
      subtitle={post.data.excerpt}
      label={formatDate(post.data.date).toUpperCase()}
      variant="standard"
    />

    <div class="post-content prose">
      <Content />
    </div>
    
    {post.data.tags && post.data.tags.length > 0 && (
      <div class="post-tags">
        {post.data.tags.map(tag => (
          <Tag tag={tag} size="small" />
        ))}
      </div>
    )}

    <footer class="post-footer">
      <section class="archives-section">
        <a href="/archive" class="archives-title-link">
          <h3 class="archives-title">More useful stuff</h3>
        </a>
        <div class="archives-list">
          {archivePosts.map(archivePost => (
            <article class="archive-item">
              <a href={`/posts/${archivePost.slug}`} class="archive-link">
                {archivePost.data.title}
              </a>
            </article>
          ))}
        </div>
      </section>
    </footer>

  </div>
</Layout>

<style is:global>
  /* Force remove beige backgrounds from all code blocks */
  .astro-code code,
  .astro-code code *,
  .astro-code span,
  pre.astro-code code,
  pre.astro-code code *,
  pre.astro-code code span,
  pre code,
  pre code * {
    background: transparent !important;
    background-color: transparent !important;
  }
  
  /* Style the pre element with padding and dark background */
  pre.astro-code {
    background-color: #24292e !important;
    padding: var(--space-4) !important;
    border-radius: 10.8px;
    overflow-x: auto;
    margin: var(--space-4) 0;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;
    font-size: 0.741rem !important;
    font-weight: 600 !important;
  }
  
  /* Fix code block line indentation and spacing */
  pre.astro-code code {
    display: block;
    padding: 0 !important;
    text-indent: 0 !important;
    line-height: 1.6;
    font-family: inherit !important;
    font-size: inherit !important;
    font-weight: inherit !important;
  }
  
  /* Force font weight on all spans inside code blocks */
  pre.astro-code span,
  pre.astro-code code span {
    font-weight: 600 !important;
  }
  
  pre.astro-code .line {
    display: inline;
    padding-left: 0 !important;
    text-indent: 0 !important;
    margin-left: 0 !important;
  }
  .post-tags {
    display: flex;
    justify-content: center;
    gap: var(--space-2);
    margin: var(--space-8) 0 var(--space-4);
  }

  /* Prose Content Styles - Article-specific overrides only */
  .prose {
    font-family: var(--font-serif-body);
    font-size: var(--font-size-large);
    line-height: var(--line-height-relaxed);
    color: var(--color-text-primary);
    max-width: none; /* Use full container width */
    width: 100%; /* Force full width */
  }

  .prose p {
    font-size: 1.092rem; /* ~17.5px - slightly larger for better readability */
    margin-bottom: var(--space-5);
    max-width: none; /* Remove any width constraints */
    width: 100%; /* Use full available width */
  }

  /* H2 headers in articles */
  .prose h2 {
    font-family: var(--font-sans-geometric);
    font-size: 0.665rem !important; /* Small uppercase headers - 10.6px */
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: 0.3em;
    line-height: var(--line-height-normal);
    margin: var(--space-7) 0 var(--space-4);
    color: var(--color-text-primary);
  }

  .prose ul,
  .prose ol {
    margin: var(--space-5) 0;
    padding-left: var(--space-6);
  }

  .prose li {
    margin-bottom: 0.25rem; /* Tighter spacing between list items */
    line-height: 1.5; /* Tighter line height */
  }

  /* Article links - different color than global */
  .prose a {
    color: var(--color-accent);
    text-decoration: underline;
    text-decoration-color: var(--color-accent);
    text-underline-offset: 0.18em;
    transition: var(--transition-normal);
  }

  .prose a:hover {
    opacity: 0.8;
    text-decoration: underline;
  }
  
  /* Force code sizing in articles */
  .prose code {
    font-size: 0.7em !important;
    vertical-align: 0.135em !important; /* Lift to align with text baseline */
  }
  
  .prose pre {
    font-size: 0.741rem !important;
  }
  
  .prose pre code {
    font-size: 1em !important; /* Relative to pre */
  }

  /* Footer */
  .post-footer {
    max-width: var(--content-max-width);
    margin: var(--space-7) auto 0;
    padding: 0 var(--page-padding);
  }

  /* Archives Section */
  .archives-section {
    margin-bottom: var(--space-8);
  }

  .archives-title-link {
    display: block;
    text-decoration: none;
    text-align: center;
    margin-bottom: var(--space-5);
  }

  .archives-title {
    font-family: var(--font-sans-geometric);
    font-size: 0.665rem;
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: 0.3em;
    color: var(--color-text-primary);
    margin: 0;
    transition: color var(--transition-normal);
  }

  .archives-title-link:hover .archives-title {
    color: var(--color-accent);
  }

  .archives-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }

  .archive-item {
    text-align: center;
  }

  .archive-link {
    display: block;
    font-family: var(--font-serif-body);
    font-size: var(--font-size-large);
    line-height: var(--line-height-relaxed);
    color: var(--color-accent);
    text-decoration: none;
    transition: opacity var(--transition-normal);
  }

  .archive-link:hover {
    opacity: 0.8;
  }



  /* Mobile */
  @media (max-width: 768px) {
    .post-hero {
      padding: var(--space-6) var(--page-padding) var(--space-8);
    }

    .post-title {
      font-size: var(--font-size-2xl);
    }

    .post-excerpt {
      font-size: var(--font-size-base);
    }

    .prose {
      font-size: 0.997rem; /* Slightly larger than base for better readability */
    }

    .post-nav {
      flex-direction: column;
      gap: var(--space-4);
    }
  }
</style>