---
import Layout from '../layouts/Layout.astro';
import PageHeader from '../components/PageHeader.astro';
import PostPreview from '../components/PostPreview.astro';
import Tag from '../components/Tag.astro';
import { getCollection } from 'astro:content';

// Get all posts, sorted by date (newest first)
const allPosts = await getCollection('posts');
const sortedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
  .slice(0, 10); // Latest 10 posts
---

<Layout title="Vibe Code Moonlighter - Designer to Builder Journey">
  <div class="container-wide">
    <PageHeader 
      title="Ship real things without the traditional coding path"
      subtitle="A humble set of bite-sized tips for product and design people who want to build and ship."
      label="Learning by building, sharing the stumbles"
      variant="hero"
    />

    <section class="posts-section">
      <div class="posts-grid">
        {sortedPosts.length > 0 ? (
          sortedPosts.map((post, index) => (
            <article class="post-item">
              <a href={`/posts/${post.slug}`} class="post-link">
                <time class="post-date">
                  {post.data.date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }).toUpperCase()}
                </time>
                <h2 class="post-title">{post.data.title}</h2>
                {post.data.excerpt && (
                  <p class="post-excerpt">{post.data.excerpt}</p>
                )}
              </a>
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="post-tags">
                  {post.data.tags.map((tag) => (
                    <Tag tag={tag} size="small" />
                  ))}
                </div>
              )}
            </article>
          ))
        ) : (
          <div class="no-posts">
            <p>The journey begins soon...</p>
          </div>
        )}
      </div>
    </section>
  </div>
</Layout>

<style>
  /* Posts Section */
  .posts-section {
    padding: 0 0 var(--space-10);
    margin-top: -50px;
  }

  /* Posts Grid */
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--space-10) var(--space-10);
  }

  .post-item {
    border-top: 1px solid var(--color-border);
    padding-top: var(--space-5);
  }


  .post-link {
    display: block;
    color: inherit;
    text-decoration: none;
  }

  .post-link:hover .post-title {
    color: var(--color-accent);
  }

  .post-date {
    display: block;
    font-family: var(--font-sans-geometric);
    font-size: 0.6rem;
    font-weight: var(--font-weight-bold);
    text-transform: uppercase;
    letter-spacing: 0.3em;
    color: var(--color-accent);
    line-height: var(--line-height-normal);
    margin-bottom: var(--space-3);
  }


  .post-title {
    font-family: var(--font-sans-geometric);
    font-size: var(--font-size-small);
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: 0.3em;
    line-height: var(--line-height-normal);
    margin: 0 0 var(--space-3);
    transition: color var(--transition-normal);
  }


  .post-excerpt {
    font-family: var(--font-serif-body);
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-normal);
    line-height: var(--line-height-relaxed);
    color: var(--color-text-primary);
    margin: 0 0 var(--space-4);
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    gap: var(--space-2);
  }

  .no-posts {
    grid-column: 1 / -1;
    text-align: center;
    padding: var(--space-8);
    color: var(--color-text-secondary);
    font-style: italic;
  }

  /* Mobile */
  @media (max-width: 768px) {
    .hero {
      padding: var(--space-8) 0;
    }

    .hero-title {
      font-size: var(--font-size-2xl);
    }

    .hero-description {
      font-size: var(--font-size-base);
    }

    .posts-grid {
      grid-template-columns: 1fr;
      gap: var(--space-8);
    }
  }
</style>
