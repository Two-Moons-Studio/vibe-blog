---
import Layout from '../layouts/Layout.astro';
import PageHeader from '../components/PageHeader.astro';
---

<Layout 
  title="Subscribe - Zero to Vibe Coder" 
  description="Get updates on the journey from designer to AI-assisted builder"
>
  <div class="container">
    <PageHeader 
      title="Subscribe"
      subtitle="Get updates on the journey from Figma to functional"
      variant="standard"
    />
    <article class="subscribe-page">

      <div class="subscribe-content">
        <div class="value-prop">
          <h2>What You'll Get</h2>
          <ul>
            <li><strong>Weekly-ish updates</strong> when I learn something worth sharing</li>
            <li><strong>Behind-the-scenes</strong> of building products with AI</li>
            <li><strong>Designer perspective</strong> on technical challenges</li>
            <li><strong>PM insights</strong> on what's actually worth building</li>
            <li><strong>Reality checks</strong> on time, cost, and sanity</li>
          </ul>
        </div>

        <div class="signup-form">
          <form id="subscribe-form" class="subscribe-form-element">
            <input 
              type="email" 
              id="subscribe-email"
              class="email-input" 
              placeholder="Your email"
              required
              aria-label="Email address"
            >
            <button type="submit" id="subscribe-submit" class="submit-button">
              SUBSCRIBE
            </button>
          </form>
          <div id="subscribe-message" class="form-message"></div>
        </div>

        <div class="promises">
          <h3>The Promise</h3>
          <p>
            No BS. No growth hacking. No "scaling your agency with AI" nonsense. 
            Just honest documentation of what it's really like to learn this stuff 
            as a designer-turned-PM.
          </p>
          <p>
            Unsubscribe anytime. Your email stays private. 
            No spam, no selling your data to growth gurus.
          </p>
        </div>
      </div>
    </article>
  </div>
</Layout>

<style>
  .subscribe-page {
    padding: 0 0 var(--space-8);
  }

  .subscribe-content {
    max-width: 500px;
    margin: 0 auto;
  }

  .value-prop {
    margin-bottom: var(--space-8);
  }

  .value-prop h2 {
    margin-bottom: var(--space-4);
  }

  .signup-form {
    background: var(--color-neutral-10);
    padding: var(--space-6);
    margin-bottom: var(--space-8);
    text-align: center;
  }

  .subscribe-form-element {
    display: flex;
    gap: var(--space-3);
    max-width: 400px;
    margin: 0 auto;
  }

  .email-input {
    flex: 1;
    padding: var(--space-3) var(--space-4);
    font-family: var(--font-serif-body);
    font-size: var(--font-size-base);
    color: var(--color-text-primary);
    background: var(--color-bg-surface);
    border: 1px solid var(--color-border);
    outline: none;
    transition: border-color var(--transition-normal);
  }

  .email-input::placeholder {
    font-family: var(--font-serif-body);
    color: var(--color-text-secondary);
    font-style: italic;
  }

  .email-input:focus {
    border-color: var(--color-accent);
  }

  .submit-button {
    padding: var(--space-3) var(--space-4);
    font-family: var(--font-sans-geometric);
    font-size: 0.54rem;
    font-weight: var(--font-weight-bold);
    letter-spacing: 0.27em;
    text-transform: uppercase;
    color: var(--color-bg-surface);
    background: var(--color-text-primary);
    border: none;
    cursor: pointer;
    transition: all var(--transition-normal);
  }

  .submit-button:hover {
    background: var(--color-accent);
    transform: translateY(-1px);
  }

  .submit-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  .form-message {
    margin-top: var(--space-4);
    padding: var(--space-3);
    font-family: var(--font-serif-body);
    font-size: var(--font-size-base);
    line-height: var(--line-height-normal);
    text-align: center;
    opacity: 0;
    transition: opacity var(--transition-normal);
  }

  .form-message:not(:empty) {
    opacity: 1;
  }

  .form-message--success {
    color: var(--color-accent);
  }

  .form-message--error {
    color: var(--color-text-primary);
  }

  .promises {
    text-align: center;
    padding-top: var(--space-6);
    border-top: 1px solid var(--color-neutral-20);
  }

  .promises h3 {
    margin-bottom: var(--space-4);
  }

  .promises p {
    color: var(--color-text-secondary);
    margin: 0 auto var(--space-3);
    max-width: 400px;
  }

  .promises p:last-child {
    margin-bottom: 0;
  }

  @media (max-width: 768px) {
    .subscribe-form-element {
      flex-direction: column;
    }

    .submit-button {
      width: 100%;
    }
  }
</style>

<script>
  const form = document.getElementById('subscribe-form') as HTMLFormElement;
  const emailInput = document.getElementById('subscribe-email') as HTMLInputElement;
  const submitButton = document.getElementById('subscribe-submit') as HTMLButtonElement;
  const messageDiv = document.getElementById('subscribe-message') as HTMLDivElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const email = emailInput.value.trim();
    if (!email) return;

    submitButton.disabled = true;
    submitButton.textContent = 'SUBSCRIBING...';
    messageDiv.textContent = '';
    messageDiv.className = 'form-message';

    try {
      const response = await fetch('/api/newsletter-subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      const data = await response.json();

      if (response.ok) {
        messageDiv.textContent = data.message || 'Thanks for subscribing! Check your inbox to confirm.';
        messageDiv.classList.add('form-message--success');
        emailInput.value = '';
      } else {
        messageDiv.textContent = data.error || 'Something went wrong. Please try again.';
        messageDiv.classList.add('form-message--error');
      }
    } catch (error) {
      messageDiv.textContent = 'Network error. Please try again.';
      messageDiv.classList.add('form-message--error');
    } finally {
      submitButton.disabled = false;
      submitButton.textContent = 'SUBSCRIBE';
    }
  });
</script>